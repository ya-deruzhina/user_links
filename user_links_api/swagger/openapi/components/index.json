{
  "responses": {    
    "UnauthorizedResponse": {
      "description": "Returned after making request with invalid credentials",
      "content": {
        "application/json": {
          "schema": {
            "example": {
              "errors": {
                "detail": [
                  "Authentication credentials were not provided"
                ]
              }
            }
          }
        }
      }
    },
    "SuccessfulSignInResponse": {
      "description": "Successful sign in",
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "description": "Successful authentication response body",
            "properties": {
              "user": {
                "$ref": "#components/schemas/User"
              },
              "token": {
                "$ref": "#components/schemas/Token"
              }
            }
          }
        }
      }
    }               
  },

  "requestBodies": {
    "AuthRequestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "identity": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
          },
          "examples": {
            "test@user.com": {
              "summary": "An example of a user",
              "value": {
                "identity": "admin",
                "password": "admin"
              }
            }
          }
        }
      }
    },
    "RegisterRequestBody": {
      "content": {
        "application/json": {
          "schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "first_name": {
                "type": "User"
              }
            }
          },
          "examples": {
            "test@user.com": {
              "summary": "An example of a user",
              "value": {
                "username": "user",
                "password": "user",
                "email":"user@user.user",
                "first_name": "User"
              }
            }
          }
        }
      }
    },
    "UpdateUserRequestBody": {
      "content": {
        "multipart/form-data": {
          "schema": {
            "type": "object",
            "properties": {
              "username": {
                "type": "string",
                "example": ""
              },
              "password": {
                "type": "string",
                "example": ""
              },
              "first_name": {
                "type": "string",
                "example": ""
              },
              "email": {
                "type": "string",
                "example": ""
              }
            }
          }
        }
      }
    },
    "ResetPasswordRequestBody": {
      "content": {
        "multipart/form-data": {
          "schema": {
            "type": "object",
            "properties": {
              "password": {
                "type": "string",
                "example": ""
              }
            }
          }
        }
      }
    }
  },

  "schemas": {
    "Token": {
      "description": "Token model",
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "type": "string",
          "example": "Bearer <token>"
        }
      }
    },

    "User": {
      "description": "User model",
      "type": "object",
      "required": [
        "email",
        "status"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "test@user.com"
        },
        "first_name": {
          "type": "string",
          "example": "Jack"
        },
        "last_name": {
          "type": "string",
          "example": "London"
        },
        "status": {
          "type": "string",
          "example": "active"
        },
        "role": {
          "type": "string",
          "example": "user"
        },
        "id": {
          "type": "integer",
          "example": "123"
        }
        
      }
    },

    "QuerySetsProducts": {
      "anyOf":[
        {
          "type": "array",
          "$ref": "#components/schemas/Products"
          },
        {
          "type": "array",
          "$ref": "#components/schemas/Products"
        }
      ]
    },

    "Products": {
      "description": "Products model",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "example": "206021772"
        },
        "name_product": {
          "type": "string",
          "example": "Пылесос"
        },
        "type_product": {
          "type": "string",
          "example": "Пылесос"
        },
        "root_type_product": {
          "type": "string",
          "example": "Пылесосы"
        },
        "vendor_code": {
          "type": "string",
          "example": "1.198-051.0"
        },
        "description": {
          "type": "string",
          "example": "Обновленная версия VC 3 Premium "
        },
        "color": {
          "type": "string",
          "example": "белый"
        },
        "contents": {
          "type": "string",
          "example": "всасывающий шланг: 1.5 м;"
        },
        "brand_name": {
          "type": "string",
          "example": "Обновленная версия VC 3 Premium"
        },
        "price_without_nds": {
          "type": "integer",
          "example": 12961
        },
        "price": {
          "type": "integer",
          "example": 15979
        },
        "options": {
          "type": "integer",
          "example": "Основная информация: Цвет"
        }        
      }
    }
  },
  "securitySchemes": {
    "BearerScheme": {
      "type": "http",
      "description": "Enter your JWT token",
      "scheme": "bearer",
      "bearerFormat": "Bearer"
    }
  }
}